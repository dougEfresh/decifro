# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DEVNET: ${{ secrets.DEVNET }}
  MAINNET: ${{ secrets.MAINNET }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
    - name: Setup pnpm
      uses: pnpm/action-setup@v4.0.0
      with:
        version: "latest"
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - run: pnpm install
    - run: pnpm run build
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: ./dist

  test:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
    - name: Setup pnpm
      uses: pnpm/action-setup@v4.0.0
      with:
        version: "latest"
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-output
    - run: pnpm install
    - run: pnpm test

  coverage:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Setup pnpm
      uses: pnpm/action-setup@v4.0.0
      with:
        version: "latest"
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: "20.x"
        cache: 'pnpm'
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-output
    - run: pnpm install
    - run: pnpm test:coverage || echo "failed"

  release:
    # only run on push (not on pull requests)
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: test  # only release if tests pass

    steps:
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: "latest"

      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install
      - name: Configure NPM token
        run: |
          pnpm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
      - name: Publish Canary Releases
        run: |
          pnpm pkg delete devDependencies
          pnpm changeset version --snapshot canary
          pnpm publish-packages 

      # - name: Semantic Release
        # uses: cycjimmy/semantic-release-action@v4
        # with:
          # You can also pin a specific version or use another action.
          # By default, cycjimmy/semantic-release-action uses the "semantic-release" CLI.
          # args: --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_TAG: canary
